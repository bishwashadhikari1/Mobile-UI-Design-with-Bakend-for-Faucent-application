// Mocks generated by Mockito 5.4.2 from annotations
// in talab/test/features/auth/presentation/view/auth_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i7;

import 'package:flutter/material.dart' as _i6;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i8;
import 'package:talab/features/auth/presentation/state/auth_state.dart' as _i2;
import 'package:talab/features/auth/presentation/viewmodel/auth_viewmodel.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthState_0 extends _i1.SmartFake implements _i2.AuthState {
  _FakeAuthState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthViewModel extends _i1.Mock implements _i3.AuthViewModel {
  @override
  set onError(_i4.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Stream<_i2.AuthState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i2.AuthState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i2.AuthState>.empty(),
      ) as _i5.Stream<_i2.AuthState>);
  @override
  _i2.AuthState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAuthState_0(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAuthState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.AuthState);
  @override
  set state(_i2.AuthState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.AuthState get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeAuthState_0(
          this,
          Invocation.getter(#debugState),
        ),
        returnValueForMissingStub: _FakeAuthState_0(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i2.AuthState);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<void> registerUser({
    required String? username,
    required String? fullname,
    required String? password,
    required String? gender,
    required DateTime? dob,
    required String? address,
    required String? email,
    required String? phone,
    String? image,
    required String? documentImage,
    required String? documentIdNumber,
    required String? accountType,
    required String? walletId,
    required _i6.BuildContext? context,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [],
          {
            #username: username,
            #fullname: fullname,
            #password: password,
            #gender: gender,
            #dob: dob,
            #address: address,
            #email: email,
            #phone: phone,
            #image: image,
            #documentImage: documentImage,
            #documentIdNumber: documentIdNumber,
            #accountType: accountType,
            #walletId: walletId,
            #context: context,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> uploadImage(_i7.File? file) => (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [file],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> loginStudent(
    _i6.BuildContext? context,
    dynamic username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginStudent,
          [
            context,
            username,
            password,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> loginWithToken() => (super.noSuchMethod(
        Invocation.method(
          #loginWithToken,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  bool updateShouldNotify(
    _i2.AuthState? old,
    _i2.AuthState? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i4.RemoveListener addListener(
    _i8.Listener<_i2.AuthState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i4.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
